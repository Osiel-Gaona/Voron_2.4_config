## Voron Design VORON2 250/300/350mm SKR 1.4 TMC2209 UART config

##========================== Pin Definitions ========================
## X_STEP_PIN         2.2
## X_DIR_PIN          2.6
## X_ENABLE_PIN       2.1
## X_STOP_PIN         1.29
## E0_DET_PIN         1.26
## X_UART_PIN         1.10


## Y_STEP_PIN         0.19
## Y_DIR_PIN          0.20
## Y_ENABLE_PIN       2.8
## Y_STOP_PIN         1.28
## E1_DET_PIN         1.26
## Y_UART_RX          1.9


## Z_STEP_PIN         0.22
## Z_DIR_PIN          2.11
## Z_ENABLE_PIN       0.21
## Z_STOP_PIN         1.27
## PWR_DET_PIN        1.0
## Z_UART             1.8


## E0_STEP_PIN        2.13
## E0_DIR_PIN         0.11
## E0_ENABLE_PIN      2.12
## E0_UART            1.4


## E1_STEP_PIN        1.15
## E1_DIR_PIN         1.14
## E1_ENABLE_PIN      1.16
## E1_UART_RX         1.1


## HE1                2.4    
## HE0                2.7
## BED                2.5
## TH1 (H1 Temp)      0.23
## TH0 (H0 Temp)      0.24
## TB  (Bed Temp)     0.25
## FAN                2.3
## SERVO              2.0
## PROBE			  0.10

##===================================================================
[include client.cfg]

[include client_macros.cfg]

##===================================================================
[mcu]
##	MCU for X/Y/E steppers main MCU
##	[X in X] - B Motor
##	[Y in Y] - A Motor
##	[E in E0] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1769_0C700013A39869AFAB6E405EC32000F5-if00
##--------------------------------------------------------------------

[mcu z]
##	MCU for Z steppers
##	[Z in X] - Front Left
##	[Z1 in Y] - Rear Left
##	[Z2 in Z] - Rear Right
##	[Z3 in E0]- Front Right
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1769_06000119A9846AAF1701555EC12000F5-if00
##--------------------------------------------------------------------

##[mcu rpi]
##serial: /tmp/klipper_host_mcu

##[adxl345]
##cs_pin: rpi:None

##[resonance_tester]
##accel_chip: adxl345
##probe_points:
##    150,150,20  # an example

[input_shaper]
shaper_freq_x: 61.4
shaper_freq_y: 44.0
shaper_type: mzv

##===================================================================

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000    			#Max 4000
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X on mcu_xye (B Motor)
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: P1.29
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 60   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: P1.10
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
##	Connected to Y on mcu_xye (A Motor)
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: P1.28
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 60  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: P1.9
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z MCU - In X Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: z:P2.2
dir_pin: z:P2.6
enable_pin: !z:P2.1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: z:P1.27
position_max: 245
position_min: -1
homing_speed: 25
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: z:P1.10
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z1]
step_pin: z:P0.19
dir_pin: !z:P0.20
enable_pin: !z:P2.8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z1]
uart_pin: z:P1.9
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z2]
step_pin: z:P0.22
dir_pin: z:P2.11
enable_pin: !z:P0.21
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z2]
uart_pin: z:P1.8
interpolate: true
run_current: 0.8
hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z3]
step_pin: z:P2.13
dir_pin: !z:P0.11
enable_pin: !z:P2.12
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: z:P1.4
interpolate: true
run_current: 0.8
hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Extruder
#####################################################################

[extruder]
step_pin: P2.13
dir_pin: P0.11
enable_pin: !P2.12
rotation_distance: 21.884698096267 # 22.72318357	#Bondtech 5mm Drive Gears
gear_ratio: 50:17				#BMG Gear Ratio
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: P2.7
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.24
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 180
max_extrude_cross_section: 5
pressure_advance: 0.035
pressure_advance_smooth_time: 0.040
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721

[tmc2209 extruder]
uart_pin: P1.4
interpolate: false
run_current: 0.5
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - Z board, Fan Pin
heater_pin: z:P2.3
sensor_type: Generic 3950 #NTC 100K beta 3950
sensor_pin: z:P0.25
max_power: 0.5 ##	Adjust Max Power so your heater doesn't warp your bed
min_temp: 5
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
# 	Fan Control
#####################################################################

[heater_fan hotend_fan]
##	Hotend Fan - XYE board, HE1 Connector
pin: P2.4
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
##	Print Cooling Fan - XYE board, Fan Pin
pin: P2.3
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan controller_fan]
##	Controller fan - Z board, HE1 Connector
pin: z:P2.4
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0

#######################################
#### Enclosure Temp Sensor Section ####
#######################################
[thermistor chamber_temp]
temperature1: 25
resistance1: 10000
beta: 3950

[temperature_fan enclosure_temp]
pin: z:P2.7
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
cycle_time:0.01
off_below:0.1
sensor_type: chamber_temp
sensor_pin: P0.23
min_temp: 0
max_temp: 70
target_temp: 35.0
control: watermark
gcode_id: C

#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling
##	Z_MAX on mcu_z
##	If your probe is NO instead of NC, add change pin to !z:P0.10
pin: ^z:P0.10
x_offset: 0
y_offset: 25.0
speed: 15.0
sample_retract_dist: 5.0
samples: 5
samples_result: median
samples_tolerance: 0.005
samples_tolerance_retries: 6

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
home_xy_position:205,293.5
speed:100
z_hop:10

[quad_gantry_level]
gantry_corners:
	-60,-10
	360,370
points:
	50,25
	50,225
	250,225
	250,25
speed: 200
horizontal_move_z: 10
retries: 10
retry_tolerance: 0.005
max_adjust: 10

[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 40,40
mesh_max: 260,260
probe_count: 5,5
fade_start: 1
fade_end: 10
algorithm: bicubic
relative_reference_index: 12

#####################################################################
# 	Displays
#####################################################################

[display]
lcd_type: uc1701
cs_pin: z:P1.18
a0_pin: z:P1.19
rst_pin: z:P1.20
contrast: 63
encoder_pins: ^z:P3.25,^z:P3.26
click_pin: ^!z:P0.28
 
[output_pin beeper]
pin: z:P1.30
 
[neopixel fysetc_mini12864]
pin: z:P1.21
chain_count: 3
color_order: RGB
initial_RED: 0.5
initial_GREEN: 0.0
initial_BLUE: 0.0

#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3

#--------------------------------------------------------------------

#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    PARKCENTER                                     ; move to middle of bed
    {% set BED = params.BED|default(100)|float %}
    {% set EXTRUDER = params.EXTRUDER|default(240)|float %}
    {% set CHAMBER = params.CHAMBER|default(15)|float %}
    {% set SOAK = params.SOAK|default(0)|float %}

    # Set bed temperature and partial nozzle temperature, turn on part cooling for heating chamber
    {% if EXTRUDER >= 230 %}
      M140 S{BED}                                  ; set bed temperature
      M104 S150                                    ; set partial hotend temperature
      M106 S255                                    ; turn on part cooling fans for air circulation

    {% else %}
      M140 S{BED}                                  ; set bed temperature
      M104 S125                                    ; set partial hotend temperature
      M106 S255                                    ; turn on part cooling fans for air circulation
    {% endif %}

    M190 S{BED}                                    ; set final bed temperature

    # soak for defined number of minutes, default is 15m
    # originally from VinS#0204
    {% if (SOAK|int) > 0 %}
        M117 Starting Soak
        {% for timer in range( SOAK|int,0,-1) %}   ; we cycle once a minute, so we can send an update
            M117 Soak: {timer|int}m remaining
            M105
            G4 P60000 # wait 1 minute
        {% endfor %}
        M117 Soak Complete
    {% endif %}

    G28
    QUAD_GANTRY_LEVEL
    G28
    BED_MESH_PROFILE LOAD=HOT
    PARKFRONT                                      ; move to front corner for ooze
    M109 S{EXTRUDER}                               ; heat up hotend

    # prime line for ABS, requires max_extrude_cross_section: 5 or greater under [extruder]
    # originally Stephan#8358 and unknown
    {% if BED >= 100 %}
      G92 E0                                       ; reset extruder
      G0 X3 Y3 Z0.90 F12000                        ; move to left corner of bed
      G1 X25 Y3 E30 F100                           ; extrude thicc line
      G1 X30 F18000                                ; hop over to clear nozzle
      G92 E0                                       ; reset extruder
    ## catch-all
    {% else %}
      G92 E0                                       ; reset extruder
      G0 Y0 X40                                    ; go to tongue of print bed
      G1 Z0.2 F500                                 ; move bed to nozzle
      G1 E2 F500                                   ; pre-purge prime LENGTH SHOULD MATCH YOUR PRINT_END RETRACT
      G1 X80 E8 F500                               ; intro line 1
      G1 Y0.3                                      ; move in a little
      G1 X40 E8 F500                               ; second line
      G1 Z2                                        ; move nozzle to prevent scratch
      G92 E0                                       ; reset extruder
    {% endif %}

    M106 S0
    M117 Printing


######################### PARKING #########################

# Park center of build volume
[gcode_macro PARKCENTER]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKCENTER
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/3} F5000
	RESTORE_GCODE_STATE NAME=PARKCENTER

# Park bottom rear left
[gcode_macro PARKFRONT]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_minimum.x+3} Y{printer.toolhead.axis_minimum.y+3} Z{printer.toolhead.axis_minimum.z+5} F5000
	RESTORE_GCODE_STATE NAME=PARKFRONT

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-3.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 10) %}
        {% set z_safe = 10.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600                                    ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000                         ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                                                  ; turn off fan
    G90                                                   ; absolute positioning
    G0 X60 Y{max_y} F3600                                 ; park nozzle at rear

    M117

######################### CONDITIONAL HOMING #########################

# Conditional G28 XYZ (home if not already homed)
[gcode_macro CG28]
gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %}
		G28
	{% endif %}

# Conditional G28 XY (home if not already homed)
[gcode_macro XYCG28]
gcode:
	{% if "xy" not in printer.toolhead.homed_axes %}
		G28 X Y
	{% endif %}

# Conditional G28 Z (home if not already homed)
[gcode_macro ZCG28]
gcode:
	{% if "z" not in printer.toolhead.homed_axes %}
		G28 Z
	{% endif %}

[gcode_macro NOZZLE_CHANGE_POS]
gcode:
        G90
        G1 X150 Y0 Z150 F15000

[gcode_macro TEST_SPEED_FAST]
gcode:
        G28 X0 Y0
        GET_POSITION
        G1 X0 Y0     F27000
        G1 X0 Y0     F27000
        G1 X300 Y300 F27000
        G1 X0 Y0     F27000
        G1 X300 Y300 F27000

        G1 X0 Y300 F36000

        G1 X300 Y0 F27000
        G1 X0 Y300 F27000
        G1 X300 Y0 F27000
        G1 X0 Y300 F27000

        G1 X0 Y0 F36000
        G1 X300 Y0 F36000
        G1 X300 Y300 F36000
        G1 X0 Y300 F36000
        G1 X0 Y0 F36000
        G28 X0 Y0
        GET_POSITION  

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}


[gcode_macro ZUP_P]
gcode:
        TESTZ Z=+

[gcode_macro ZDOWN_P]
gcode:
        TESTZ Z=-
[gcode_macro ZUP_PP]
gcode:
        TESTZ Z=++

[gcode_macro ZDOWN_PP]
gcode:
        TESTZ Z=--

[gcode_macro ZUP01]
gcode:
        TESTZ Z=0.1

[gcode_macro ZDOWN01]
gcode:
        TESTZ Z=-0.1

## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 31.763
#*# pid_ki = 2.582
#*# pid_kd = 97.672
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 37.089
#*# pid_ki = 1.359
#*# pid_kd = 253.129
#*#
#*# [stepper_z]
#*# position_endstop = 0.725
#*#
#*# [probe]
#*# z_offset = -0.015
#*#
#*# [bed_mesh HOT]
#*# version = 1
#*# points =
#*# 	-0.032500, 0.000000, 0.007500, 0.000000, -0.040000
#*# 	-0.045000, -0.012500, -0.007500, -0.012500, -0.057500
#*# 	-0.050000, -0.017500, 0.000000, -0.015000, -0.062500
#*# 	-0.035000, 0.002500, 0.012500, 0.015000, -0.020000
#*# 	-0.002500, 0.042500, 0.047500, 0.042500, 0.002500
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 260.0
#*# mesh_x_pps = 2
#*# max_x = 260.0
